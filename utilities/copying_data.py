# -*- coding: utf-8 -*-
import json
from datetime import datetime

from peewee import SqliteDatabase, Model, CharField, TextField, DateTimeField
from loguru import logger

"""–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã ReportCard10 –≤ ReportCard12"""

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = SqliteDatabase('vacations.db')


class BaseModel(Model):
    class Meta:
        database = db


class ReportCard10(BaseModel):
    """–ì—Ä–∞—Ñ–∏–∫ –≤—ã—Ö–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –æ–∫—Ç—è–±—Ä—å 2025"""
    ksp = CharField()
    name = CharField()
    category = CharField()
    profession = CharField()
    status = CharField()
    abbreviation = CharField(null=True)
    grade = CharField(null=True)
    tab = CharField()
    fio = CharField()
    salary = CharField()
    days = TextField()  # –•—Ä–∞–Ω–∏–º JSON –∫–∞–∫ —Ç–µ–∫—Å—Ç
    date_change = DateTimeField(default=datetime.now)  # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ üÜï –ù–æ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞


class ReportCard11(BaseModel):
    """–ì—Ä–∞—Ñ–∏–∫ –≤—ã—Ö–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –Ω–æ—è–±—Ä—å 2025"""
    ksp = CharField()
    name = CharField()
    category = CharField()
    profession = CharField()
    status = CharField()
    abbreviation = CharField(null=True)
    grade = CharField(null=True)
    tab = CharField()
    fio = CharField()
    salary = CharField()
    days = TextField()  # –•—Ä–∞–Ω–∏–º JSON –∫–∞–∫ —Ç–µ–∫—Å—Ç
    date_change = DateTimeField(default=datetime.now)  # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ üÜï –ù–æ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞


class ReportCard12(BaseModel):
    """–ì—Ä–∞—Ñ–∏–∫ –≤—ã—Ö–æ–¥–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –¥–µ–∫–∞–±—Ä—å 2025"""
    ksp = CharField()
    name = CharField()
    category = CharField()
    profession = CharField()
    status = CharField()
    abbreviation = CharField(null=True)
    grade = CharField(null=True)
    tab = CharField()
    fio = CharField()
    salary = CharField()
    days = TextField()  # –•—Ä–∞–Ω–∏–º JSON –∫–∞–∫ —Ç–µ–∫—Å—Ç
    date_change = DateTimeField(default=datetime.now)  # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ üÜï –ù–æ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞


# def copy_data():
employees = []
for emp in ReportCard10.select():
    employees.append({
        "–ö–°–ü": emp.ksp,
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": emp.name,
        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": emp.category,
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è": emp.profession,
        "–°—Ç–∞—Ç—É—Å": emp.status,
        "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ": emp.abbreviation,
        "–†–∞–∑—Ä—è–¥": emp.grade,
        "–¢–∞–±": emp.tab,
        "–§–ò–û": emp.fio,
        "–¢–∞—Ä–∏—Ñ": emp.salary,
        "days": json.loads(emp.days)
    })

for data in employees:
    logger.info(data)

for row in employees:
    ReportCard12.create(
        ksp=row["–ö–°–ü"],
        name=row["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"],
        category=row["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"],
        profession=row["–ü—Ä–æ—Ñ–µ—Å—Å–∏—è"],
        status=row["–°—Ç–∞—Ç—É—Å"],
        abbreviation=row.get("–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ", ""),
        grade=row.get("–†–∞–∑—Ä—è–¥", ""),
        tab=row["–¢–∞–±"],
        fio=row["–§–ò–û"],
        salary=row["–¢–∞—Ä–∏—Ñ"],
        days=json.dumps(row["days"], ensure_ascii=False)
    )
